version: '3'

services: 
  discovery-server:
    build: ./eureka
    ports:
      - "8090:8090"
    restart: always
    networks:
      - app-network
    environment:
      - EUREKA_SERVER=http://discovery-server:8090/eureka/

  api-gateway:
    container_name: api-gateway
    build: ./api-gateway
    ports:
      - "8099:8099"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8090/eureka/
    depends_on:
      - discovery-server
    networks:
      - app-network

  server-config:
    container_name: server-config
    build: ./server-config
    ports:
      - "8888:8888"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8090/eureka/
    depends_on:
      - discovery-server
    networks:
      - app-network

  postgresql:
    container_name: postgresql
    image: postgres
    environment:
      POSTGRES_USER: houssemino
      POSTGRES_PASSWORD: houssemino
      POSTGRES_DB: product_db
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres:/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    networks:
      - app-network
    restart: unless-stopped

  python-microservice:
    build: ./news
    volumes:
      - ./news:/usr/src/app
    ports:
      - "5001:5001"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8090/eureka/
      - POSTGRES_USER=houssemino
      - POSTGRES_PASSWORD=houssemino
      - POSTGRES_DB=product_db
      - POSTGRES_HOST=postgresql
      - POSTGRES_PORT=5432
    networks:
      - app-network
    depends_on:
      - postgresql

  event-service:
    restart: on-failure
    build: ./express-js-microservice
    environment:
      - DATABASE_URL=postgres://houssemino:houssemino@postgresql:5432/product_db
      - EUREKA_SERVER=http://discovery-server:8090/eureka/
    ports:
      - "3002:3002"
    networks:
      - app-network
    depends_on:
      - postgresql
      - discovery-server

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:26.0.5
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    ports:
      - "9090:8080"
    command:
      - "start-dev"
      - "--http-port=8080"
    networks:
      - app-network
    volumes:
      - keycloak_data:/opt/keycloak/data


  microservice-quiz:
    restart: on-failure
    container_name: microservice-quiz
    build: ./microservice-quiz
    ports:
      - "8092:8092"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8090/eureka/
    networks:
      - app-network
    depends_on:
      - discovery-server
    volumes:
      - quiz-db-data:/app/Database/Data

  microservice-inscriptions:
    restart: on-failure
    container_name: microservice-inscriptions
    build: ./microservice-inscriptions
    ports:
      - "8093:8093"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8090/eureka/
    networks:
      - app-network
    depends_on:
      - discovery-server
    volumes:
      - inscription-db-data:/app/Database/Data

  microservice-forum:
    restart: on-failure
    container_name: microservice-forum
    build: ./microservice-forum
    ports:
      - "8094:8094"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8090/eureka/
    networks:
      - app-network
    depends_on:
      - discovery-server
    volumes:
      - forum-db-data:/app/Database/Data

  mysqldb:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: houssemino
    ports:
      - "3307:3306"
    volumes:
      - db:/var/lib/mysql

  microservice-reservation:
    depends_on:
      - mysqldb
      - discovery-server
    build: ./microservice-reservation
    restart: on-failure
    ports:
      - "8095:8095"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8090/eureka/
    networks:
      - app-network
    volumes:
      - reservation-db-data:/app/Database/Data

  microservice-spring:
    depends_on:
      - mysqldb
    #build: ./gestion-station-ski
    image: jalloulihoussemeddin/houssemeddinjallouli-5sae7-g1-ski-spring:1.0.0
    restart: on-failure
    ports:
      - "8069:8069"
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url": "jdbc:mysql://mysqldb:3306/houssemino?createDatabaseIfNotExist=true",
        "spring.datasource.username": "root",
        "spring.datasource.password": "root",
        "spring.jpa.hibernate.ddl-auto": "update"}'
    stdin_open: true
    tty: true

  node-js:
    restart: on-failure
    build: ./nodej
    environment:
      - DATABASE_URL=postgres://houssemino:houssemino@postgresql:5432/product_db
      - EUREKA_SERVER=http://discovery-server:8090/eureka/
    ports:
      - "3003:3003"
    networks:
      - app-network
    depends_on:
      - postgresql
      - discovery-server

  website-angular:
    build: ./angular-18
    ports:
      - "4200:4200"
    depends_on:
      - api-gateway
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db:
  quiz-db-data: 
    driver: local
  reservation-db-data:
    driver: local
  inscription-db-data: 
    driver: local
  forum-db-data:
    driver: local
  keycloak_data:
    driver: local
  postgres:
